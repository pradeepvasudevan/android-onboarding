apply plugin: 'maven-publish'

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    exclude '**/R.html', '**/R.*.html', '**/index.html'
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // Adds java docs and sources as separate jars.
                artifact androidSourcesJar

                // You can customize attributes of the publication here or in module's build.gradle file.
                groupId = rootProject.ext.PUBLISH_GROUP_ID
                artifactId = project.getName()
                version = rootProject.ext.PUBLISH_VERSION // or just '1.0'

            }

            debug(MavenPublication) {
                // Applies the component for the release build variant.
                from components.debug

                // Adds java docs and sources as separate jars.
                artifact androidSourcesJar

                // You can customize attributes of the publication here or in module's build.gradle file.
                groupId = rootProject.ext.PUBLISH_GROUP_ID
                artifactId = project.getName()
                version = rootProject.ext.PUBLISH_VERSION // or just '1.0'

            }
        }

        repositories {
            maven {
                name = 'nexus'
                url = "file://${buildDir}/repo"
            }
        }
    }
}